[comment encoding = UTF-8 /]
[module generate('http://ezdevops2.0com', 'http://www.eclipse.org/emf/2002/Ecore')]

[template public generateJenkinsFile(config : projectsortie::config)]
node {
  agent {
    docker { image config.agent.type }
  }

  def dockerImageTag = "${config.name}:${env.BUILD_NUMBER}"

  try {
    notifyBuild('STARTED')

    stage('Clone repository') {
      git url: config.stages.cloning.url,
          credentialsId: config.stages.cloning.credentialID,
          branch: config.stages.cloning.branch
    }

[comment]    stage('Run integration & unit tests') {
      withCredentials([
        [for (credential : projectsortie::credentials | config.stages.tests.credentials)]
          string(credentialsId: credential.name, variable: credential.variable)
      ]) {
        [for (className : EString | config.stages.tests.classestotest.split(','))]
          sh "./mvnw test -Dspring.profiles.active=prod -Dspring.datasource.url=$TEST_DATABASE_URL -Dspring.datasource.username=$TEST_DATABASE_USERNAME -Dspring.datasource.password=$TEST_DATABASE_PASSWORD -Dtest=\"${className}\""
        [/for]
      }
    }[/comment]

    stage('Build Docker image') {
      sh "docker build -t ${dockerImageTag} ."
    }

    stage('Deploy Docker image') {
      echo "Docker Image Tag Name: ${dockerImageTag}"
      echo "Logging in to Docker Hub..."

      withCredentials([
        usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')
      ]) {
        sh 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
      }

      echo "Pushing image..."
      sh "docker push ${dockerImageTag}"
    }
  } finally {
    notifyBuild('FINISHED')
  }
}

[template public string(credentialsId : String, variable : String)] "${credentialsId}('${variable}')"
[/template]
[/template]

