/*
 * generated by Xtext 2.32.0
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class JenkinsGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.config");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAgentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAgentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAgentAgentParserRuleCall_4_0 = (RuleCall)cAgentAssignment_4.eContents().get(0);
		private final Keyword cStagesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cStagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cStagesStagesParserRuleCall_7_0 = (RuleCall)cStagesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cStagesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cStagesStagesParserRuleCall_8_1_0 = (RuleCall)cStagesAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//config returns config:
		//    'config'
		//    name=EString
		//    '{'
		//        'agent' agent=Agent
		//        'stages' '{' stages+=Stages ( "," stages+=Stages)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'config'
		//name=EString
		//'{'
		//    'agent' agent=Agent
		//    'stages' '{' stages+=Stages ( "," stages+=Stages)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'config'
		public Keyword getConfigKeyword_0() { return cConfigKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'agent'
		public Keyword getAgentKeyword_3() { return cAgentKeyword_3; }
		
		//agent=Agent
		public Assignment getAgentAssignment_4() { return cAgentAssignment_4; }
		
		//Agent
		public RuleCall getAgentAgentParserRuleCall_4_0() { return cAgentAgentParserRuleCall_4_0; }
		
		//'stages'
		public Keyword getStagesKeyword_5() { return cStagesKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//stages+=Stages
		public Assignment getStagesAssignment_7() { return cStagesAssignment_7; }
		
		//Stages
		public RuleCall getStagesStagesParserRuleCall_7_0() { return cStagesStagesParserRuleCall_7_0; }
		
		//( "," stages+=Stages)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//stages+=Stages
		public Assignment getStagesAssignment_8_1() { return cStagesAssignment_8_1; }
		
		//Stages
		public RuleCall getStagesStagesParserRuleCall_8_1_0() { return cStagesStagesParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAgentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Agent returns Agent:
		//    {Agent}
		//    'Agent'
		//    '{'
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Agent}
		//'Agent'
		//'{'
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Agent}
		public Action getAgentAction_0() { return cAgentAction_0; }
		
		//'Agent'
		public Keyword getAgentKeyword_1() { return cAgentKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=EString
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_3_1_0() { return cTypeEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class StagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Stages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStagesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTestsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTestsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTestsTestsParserRuleCall_4_0 = (RuleCall)cTestsAssignment_4.eContents().get(0);
		private final Keyword cCloningKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCloningAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCloningCloningParserRuleCall_6_0 = (RuleCall)cCloningAssignment_6.eContents().get(0);
		private final Keyword cBuildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cBuildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBuildBuildParserRuleCall_8_0 = (RuleCall)cBuildAssignment_8.eContents().get(0);
		private final Keyword cDeployKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDeployAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDeployDeployParserRuleCall_10_0 = (RuleCall)cDeployAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Stages returns Stages:
		//    'Stages'
		//    name=EString
		//    '{'
		//        'tests' tests=Tests
		//        'cloning' cloning=Cloning
		//        'build' build=Build
		//        'deploy' deploy=Deploy
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Stages'
		//name=EString
		//'{'
		//    'tests' tests=Tests
		//    'cloning' cloning=Cloning
		//    'build' build=Build
		//    'deploy' deploy=Deploy
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Stages'
		public Keyword getStagesKeyword_0() { return cStagesKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'tests'
		public Keyword getTestsKeyword_3() { return cTestsKeyword_3; }
		
		//tests=Tests
		public Assignment getTestsAssignment_4() { return cTestsAssignment_4; }
		
		//Tests
		public RuleCall getTestsTestsParserRuleCall_4_0() { return cTestsTestsParserRuleCall_4_0; }
		
		//'cloning'
		public Keyword getCloningKeyword_5() { return cCloningKeyword_5; }
		
		//cloning=Cloning
		public Assignment getCloningAssignment_6() { return cCloningAssignment_6; }
		
		//Cloning
		public RuleCall getCloningCloningParserRuleCall_6_0() { return cCloningCloningParserRuleCall_6_0; }
		
		//'build'
		public Keyword getBuildKeyword_7() { return cBuildKeyword_7; }
		
		//build=Build
		public Assignment getBuildAssignment_8() { return cBuildAssignment_8; }
		
		//Build
		public RuleCall getBuildBuildParserRuleCall_8_0() { return cBuildBuildParserRuleCall_8_0; }
		
		//'deploy'
		public Keyword getDeployKeyword_9() { return cDeployKeyword_9; }
		
		//deploy=Deploy
		public Assignment getDeployAssignment_10() { return cDeployAssignment_10; }
		
		//Deploy
		public RuleCall getDeployDeployParserRuleCall_10_0() { return cDeployDeployParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class TestsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Tests");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTestsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTestsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cShellKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cShellAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cShellEStringParserRuleCall_3_1_0 = (RuleCall)cShellAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cClassestotestKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClassestotestAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cClassestotestEStringParserRuleCall_4_1_0 = (RuleCall)cClassestotestAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAgentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAgentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAgentAgentParserRuleCall_5_1_0 = (RuleCall)cAgentAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCredentialsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cCredentialsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cCredentialsCredentialsParserRuleCall_6_2_0 = (RuleCall)cCredentialsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cCredentialsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cCredentialsCredentialsParserRuleCall_6_3_1_0 = (RuleCall)cCredentialsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Tests returns Tests:
		//    {Tests}
		//    'Tests'
		//    '{'
		//        ('shell' shell=EString)?
		//        ('classestotest' classestotest=EString)?
		//        ('agent' agent=Agent)?
		//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Tests}
		//'Tests'
		//'{'
		//    ('shell' shell=EString)?
		//    ('classestotest' classestotest=EString)?
		//    ('agent' agent=Agent)?
		//    ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Tests}
		public Action getTestsAction_0() { return cTestsAction_0; }
		
		//'Tests'
		public Keyword getTestsKeyword_1() { return cTestsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('shell' shell=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'shell'
		public Keyword getShellKeyword_3_0() { return cShellKeyword_3_0; }
		
		//shell=EString
		public Assignment getShellAssignment_3_1() { return cShellAssignment_3_1; }
		
		//EString
		public RuleCall getShellEStringParserRuleCall_3_1_0() { return cShellEStringParserRuleCall_3_1_0; }
		
		//('classestotest' classestotest=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'classestotest'
		public Keyword getClassestotestKeyword_4_0() { return cClassestotestKeyword_4_0; }
		
		//classestotest=EString
		public Assignment getClassestotestAssignment_4_1() { return cClassestotestAssignment_4_1; }
		
		//EString
		public RuleCall getClassestotestEStringParserRuleCall_4_1_0() { return cClassestotestEStringParserRuleCall_4_1_0; }
		
		//('agent' agent=Agent)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'agent'
		public Keyword getAgentKeyword_5_0() { return cAgentKeyword_5_0; }
		
		//agent=Agent
		public Assignment getAgentAssignment_5_1() { return cAgentAssignment_5_1; }
		
		//Agent
		public RuleCall getAgentAgentParserRuleCall_5_1_0() { return cAgentAgentParserRuleCall_5_1_0; }
		
		//('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'credentials'
		public Keyword getCredentialsKeyword_6_0() { return cCredentialsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_6_2() { return cCredentialsAssignment_6_2; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_6_2_0() { return cCredentialsCredentialsParserRuleCall_6_2_0; }
		
		//( "," credentials+=credentials)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_6_3_1() { return cCredentialsAssignment_6_3_1; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_6_3_1_0() { return cCredentialsCredentialsParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class CloningElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Cloning");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCloningAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCloningKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUrlKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUrlAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_3_1_0 = (RuleCall)cUrlAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCredentialIDKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCredentialIDAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCredentialIDEStringParserRuleCall_4_1_0 = (RuleCall)cCredentialIDAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBranchKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cBranchAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cBranchEStringParserRuleCall_5_1_0 = (RuleCall)cBranchAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAgentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAgentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAgentAgentParserRuleCall_6_1_0 = (RuleCall)cAgentAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Cloning returns Cloning:
		//    {Cloning}
		//    'Cloning'
		//    '{'
		//        ('url' url=EString)?
		//        ('credentialID' credentialID=EString)?
		//        ('branch' branch=EString)?
		//        ('agent' agent=Agent)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Cloning}
		//'Cloning'
		//'{'
		//    ('url' url=EString)?
		//    ('credentialID' credentialID=EString)?
		//    ('branch' branch=EString)?
		//    ('agent' agent=Agent)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Cloning}
		public Action getCloningAction_0() { return cCloningAction_0; }
		
		//'Cloning'
		public Keyword getCloningKeyword_1() { return cCloningKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('url' url=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'url'
		public Keyword getUrlKeyword_3_0() { return cUrlKeyword_3_0; }
		
		//url=EString
		public Assignment getUrlAssignment_3_1() { return cUrlAssignment_3_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_1_0() { return cUrlEStringParserRuleCall_3_1_0; }
		
		//('credentialID' credentialID=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'credentialID'
		public Keyword getCredentialIDKeyword_4_0() { return cCredentialIDKeyword_4_0; }
		
		//credentialID=EString
		public Assignment getCredentialIDAssignment_4_1() { return cCredentialIDAssignment_4_1; }
		
		//EString
		public RuleCall getCredentialIDEStringParserRuleCall_4_1_0() { return cCredentialIDEStringParserRuleCall_4_1_0; }
		
		//('branch' branch=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'branch'
		public Keyword getBranchKeyword_5_0() { return cBranchKeyword_5_0; }
		
		//branch=EString
		public Assignment getBranchAssignment_5_1() { return cBranchAssignment_5_1; }
		
		//EString
		public RuleCall getBranchEStringParserRuleCall_5_1_0() { return cBranchEStringParserRuleCall_5_1_0; }
		
		//('agent' agent=Agent)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'agent'
		public Keyword getAgentKeyword_6_0() { return cAgentKeyword_6_0; }
		
		//agent=Agent
		public Assignment getAgentAssignment_6_1() { return cAgentAssignment_6_1; }
		
		//Agent
		public RuleCall getAgentAgentParserRuleCall_6_1_0() { return cAgentAgentParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class BuildElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Build");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBuildAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBuildKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCmdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCmdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCmdEStringParserRuleCall_3_1_0 = (RuleCall)cCmdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgentAgentParserRuleCall_4_1_0 = (RuleCall)cAgentAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCredentialsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cCredentialsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cCredentialsCredentialsParserRuleCall_5_2_0 = (RuleCall)cCredentialsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cCredentialsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cCredentialsCredentialsParserRuleCall_5_3_1_0 = (RuleCall)cCredentialsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Build returns Build:
		//    {Build}
		//    'Build'
		//    '{'
		//        ('cmd' cmd=EString)?
		//        ('agent' agent=Agent)?
		//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Build}
		//'Build'
		//'{'
		//    ('cmd' cmd=EString)?
		//    ('agent' agent=Agent)?
		//    ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Build}
		public Action getBuildAction_0() { return cBuildAction_0; }
		
		//'Build'
		public Keyword getBuildKeyword_1() { return cBuildKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('cmd' cmd=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'cmd'
		public Keyword getCmdKeyword_3_0() { return cCmdKeyword_3_0; }
		
		//cmd=EString
		public Assignment getCmdAssignment_3_1() { return cCmdAssignment_3_1; }
		
		//EString
		public RuleCall getCmdEStringParserRuleCall_3_1_0() { return cCmdEStringParserRuleCall_3_1_0; }
		
		//('agent' agent=Agent)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'agent'
		public Keyword getAgentKeyword_4_0() { return cAgentKeyword_4_0; }
		
		//agent=Agent
		public Assignment getAgentAssignment_4_1() { return cAgentAssignment_4_1; }
		
		//Agent
		public RuleCall getAgentAgentParserRuleCall_4_1_0() { return cAgentAgentParserRuleCall_4_1_0; }
		
		//('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'credentials'
		public Keyword getCredentialsKeyword_5_0() { return cCredentialsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_5_2() { return cCredentialsAssignment_5_2; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_5_2_0() { return cCredentialsCredentialsParserRuleCall_5_2_0; }
		
		//( "," credentials+=credentials)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_5_3_1() { return cCredentialsAssignment_5_3_1; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_5_3_1_0() { return cCredentialsCredentialsParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DeployElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.Deploy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeployAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDeployKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCmdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCmdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCmdEStringParserRuleCall_3_1_0 = (RuleCall)cCmdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCredentialsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCredentialsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCredentialsCredentialsParserRuleCall_4_2_0 = (RuleCall)cCredentialsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCredentialsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCredentialsCredentialsParserRuleCall_4_3_1_0 = (RuleCall)cCredentialsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Deploy returns Deploy:
		//    {Deploy}
		//    'Deploy'
		//    '{'
		//        ('cmd' cmd=EString)?
		//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Deploy}
		//'Deploy'
		//'{'
		//    ('cmd' cmd=EString)?
		//    ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Deploy}
		public Action getDeployAction_0() { return cDeployAction_0; }
		
		//'Deploy'
		public Keyword getDeployKeyword_1() { return cDeployKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('cmd' cmd=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'cmd'
		public Keyword getCmdKeyword_3_0() { return cCmdKeyword_3_0; }
		
		//cmd=EString
		public Assignment getCmdAssignment_3_1() { return cCmdAssignment_3_1; }
		
		//EString
		public RuleCall getCmdEStringParserRuleCall_3_1_0() { return cCmdEStringParserRuleCall_3_1_0; }
		
		//('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'credentials'
		public Keyword getCredentialsKeyword_4_0() { return cCredentialsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_4_2() { return cCredentialsAssignment_4_2; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_4_2_0() { return cCredentialsCredentialsParserRuleCall_4_2_0; }
		
		//( "," credentials+=credentials)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//credentials+=credentials
		public Assignment getCredentialsAssignment_4_3_1() { return cCredentialsAssignment_4_3_1; }
		
		//credentials
		public RuleCall getCredentialsCredentialsParserRuleCall_4_3_1_0() { return cCredentialsCredentialsParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CredentialsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Jenkins.credentials");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCredentialsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCredentialsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cVariableKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVariableAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cVariableEStringParserRuleCall_4_1_0 = (RuleCall)cVariableAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//credentials returns credentials:
		//    {credentials}
		//    'credentials'
		//    name=EString
		//    '{'
		//        ('variable' variable=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{credentials}
		//'credentials'
		//name=EString
		//'{'
		//    ('variable' variable=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{credentials}
		public Action getCredentialsAction_0() { return cCredentialsAction_0; }
		
		//'credentials'
		public Keyword getCredentialsKeyword_1() { return cCredentialsKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('variable' variable=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'variable'
		public Keyword getVariableKeyword_4_0() { return cVariableKeyword_4_0; }
		
		//variable=EString
		public Assignment getVariableAssignment_4_1() { return cVariableAssignment_4_1; }
		
		//EString
		public RuleCall getVariableEStringParserRuleCall_4_1_0() { return cVariableEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	private final ConfigElements pConfig;
	private final EStringElements pEString;
	private final AgentElements pAgent;
	private final StagesElements pStages;
	private final TestsElements pTests;
	private final CloningElements pCloning;
	private final BuildElements pBuild;
	private final DeployElements pDeploy;
	private final CredentialsElements pCredentials;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public JenkinsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pConfig = new ConfigElements();
		this.pEString = new EStringElements();
		this.pAgent = new AgentElements();
		this.pStages = new StagesElements();
		this.pTests = new TestsElements();
		this.pCloning = new CloningElements();
		this.pBuild = new BuildElements();
		this.pDeploy = new DeployElements();
		this.pCredentials = new CredentialsElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Jenkins".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//config returns config:
	//    'config'
	//    name=EString
	//    '{'
	//        'agent' agent=Agent
	//        'stages' '{' stages+=Stages ( "," stages+=Stages)* '}'
	//    '}';
	public ConfigElements getConfigAccess() {
		return pConfig;
	}
	
	public ParserRule getConfigRule() {
		return getConfigAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Agent returns Agent:
	//    {Agent}
	//    'Agent'
	//    '{'
	//        ('type' type=EString)?
	//    '}';
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//Stages returns Stages:
	//    'Stages'
	//    name=EString
	//    '{'
	//        'tests' tests=Tests
	//        'cloning' cloning=Cloning
	//        'build' build=Build
	//        'deploy' deploy=Deploy
	//    '}';
	public StagesElements getStagesAccess() {
		return pStages;
	}
	
	public ParserRule getStagesRule() {
		return getStagesAccess().getRule();
	}
	
	//Tests returns Tests:
	//    {Tests}
	//    'Tests'
	//    '{'
	//        ('shell' shell=EString)?
	//        ('classestotest' classestotest=EString)?
	//        ('agent' agent=Agent)?
	//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
	//    '}';
	public TestsElements getTestsAccess() {
		return pTests;
	}
	
	public ParserRule getTestsRule() {
		return getTestsAccess().getRule();
	}
	
	//Cloning returns Cloning:
	//    {Cloning}
	//    'Cloning'
	//    '{'
	//        ('url' url=EString)?
	//        ('credentialID' credentialID=EString)?
	//        ('branch' branch=EString)?
	//        ('agent' agent=Agent)?
	//    '}';
	public CloningElements getCloningAccess() {
		return pCloning;
	}
	
	public ParserRule getCloningRule() {
		return getCloningAccess().getRule();
	}
	
	//Build returns Build:
	//    {Build}
	//    'Build'
	//    '{'
	//        ('cmd' cmd=EString)?
	//        ('agent' agent=Agent)?
	//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
	//    '}';
	public BuildElements getBuildAccess() {
		return pBuild;
	}
	
	public ParserRule getBuildRule() {
		return getBuildAccess().getRule();
	}
	
	//Deploy returns Deploy:
	//    {Deploy}
	//    'Deploy'
	//    '{'
	//        ('cmd' cmd=EString)?
	//        ('credentials' '{' credentials+=credentials ( "," credentials+=credentials)* '}' )?
	//    '}';
	public DeployElements getDeployAccess() {
		return pDeploy;
	}
	
	public ParserRule getDeployRule() {
		return getDeployAccess().getRule();
	}
	
	//credentials returns credentials:
	//    {credentials}
	//    'credentials'
	//    name=EString
	//    '{'
	//        ('variable' variable=EString)?
	//    '}';
	public CredentialsElements getCredentialsAccess() {
		return pCredentials;
	}
	
	public ParserRule getCredentialsRule() {
		return getCredentialsAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
